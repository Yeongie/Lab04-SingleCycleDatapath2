$date
	Tue May 20 23:50:06 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module processor_tb $end
$var wire 32 ! write_reg_data [31:0] $end
$var wire 5 " write_reg_addr [4:0] $end
$var wire 32 # reg2_data [31:0] $end
$var wire 5 $ reg2_addr [4:0] $end
$var wire 32 % reg1_data [31:0] $end
$var wire 5 & reg1_addr [4:0] $end
$var wire 32 ' prog_count [31:0] $end
$var wire 6 ( instr_opcode [5:0] $end
$var reg 1 ) clk $end
$var reg 1 * rst $end
$var integer 32 + passedTests [31:0] $end
$var integer 32 , totalTests [31:0] $end
$scope module uut $end
$var wire 32 - PC [31:0] $end
$var wire 1 ) clk $end
$var wire 5 . dst_addr [4:0] $end
$var wire 32 / dst_data [31:0] $end
$var wire 6 0 opcode [5:0] $end
$var wire 1 * rst $end
$var wire 1 1 s19 $end
$var wire 5 2 src1_addr [4:0] $end
$var wire 32 3 src1_out [31:0] $end
$var wire 5 4 src2_addr [4:0] $end
$var wire 32 5 src2_out [31:0] $end
$var wire 32 6 src2_out_temp [31:0] $end
$var wire 5 7 src2_addr_temp [4:0] $end
$var wire 32 8 src1_out_temp [31:0] $end
$var wire 5 9 src1_addr_temp [4:0] $end
$var wire 16 : s9 [15:0] $end
$var wire 1 ; s8 $end
$var wire 1 < s7 $end
$var wire 1 = s6 $end
$var wire 2 > s5 [1:0] $end
$var wire 1 ? s4 $end
$var wire 1 @ s3 $end
$var wire 32 A s23 [31:0] $end
$var wire 8 B s22 [7:0] $end
$var wire 8 C s21 [7:0] $end
$var wire 32 D s20 [31:0] $end
$var wire 1 E s2 $end
$var wire 32 F s18 [31:0] $end
$var wire 32 G s17 [31:0] $end
$var wire 32 H s16 [31:0] $end
$var wire 1 I s15 $end
$var wire 32 J s14 [31:0] $end
$var wire 4 K s13 [3:0] $end
$var wire 6 L s12 [5:0] $end
$var wire 5 M s11 [4:0] $end
$var wire 32 N s10 [31:0] $end
$var wire 1 O s1 $end
$var wire 32 P s0 [31:0] $end
$var wire 6 Q opcode_temp [5:0] $end
$var wire 32 R dst_data_temp [31:0] $end
$var wire 5 S dst_addr_temp [4:0] $end
$var wire 32 T PC_temp [31:0] $end
$scope module DIG_BitExtender_i9 $end
$var wire 16 U in [15:0] $end
$var wire 32 V out [31:0] $end
$var parameter 32 W inputBits $end
$var parameter 32 X outputBits $end
$upscope $end
$scope module DIG_RAMDualAccess_i7 $end
$var wire 8 Y \1A [7:0] $end
$var wire 8 Z \2A [7:0] $end
$var wire 32 [ \2D [31:0] $end
$var wire 1 ) C $end
$var wire 1 = str $end
$var wire 1 @ ld $end
$var wire 32 \ \1Din [31:0] $end
$var wire 32 ] \1D [31:0] $end
$var parameter 32 ^ AddrBits $end
$var parameter 32 _ Bits $end
$upscope $end
$scope module Mux_2x1_NBits_i10 $end
$var wire 5 ` in_0 [4:0] $end
$var wire 5 a in_1 [4:0] $end
$var wire 1 O sel $end
$var parameter 32 b Bits $end
$var reg 5 c out [4:0] $end
$upscope $end
$scope module Mux_2x1_NBits_i12 $end
$var wire 32 d in_1 [31:0] $end
$var wire 1 ? sel $end
$var wire 32 e in_0 [31:0] $end
$var parameter 32 f Bits $end
$var reg 32 g out [31:0] $end
$upscope $end
$scope module Mux_2x1_NBits_i4 $end
$var wire 32 h in_1 [31:0] $end
$var wire 1 < sel $end
$var wire 32 i in_0 [31:0] $end
$var parameter 32 j Bits $end
$var reg 32 k out [31:0] $end
$upscope $end
$scope module Mux_2x1_NBits_i5 $end
$var wire 1 1 sel $end
$var wire 32 l in_1 [31:0] $end
$var wire 32 m in_0 [31:0] $end
$var parameter 32 n Bits $end
$var reg 32 o out [31:0] $end
$upscope $end
$scope module alu_control_i11 $end
$var wire 6 p funct [5:0] $end
$var wire 2 q alu_op [1:0] $end
$var reg 4 r alu_control [3:0] $end
$upscope $end
$scope module alu_i2 $end
$var wire 32 s A [31:0] $end
$var wire 4 t alu_control [3:0] $end
$var wire 32 u B [31:0] $end
$var reg 32 v result [31:0] $end
$var reg 32 w temp [31:0] $end
$var reg 1 x zero $end
$upscope $end
$scope module alu_i3 $end
$var wire 32 y B [31:0] $end
$var wire 4 z alu_control [3:0] $end
$var wire 32 { A [31:0] $end
$var reg 32 | result [31:0] $end
$var reg 32 } temp [31:0] $end
$var reg 1 I zero $end
$upscope $end
$scope module alu_i6 $end
$var wire 32 ~ A [31:0] $end
$var wire 32 !" B [31:0] $end
$var wire 4 "" alu_control [3:0] $end
$var reg 32 #" result [31:0] $end
$var reg 32 $" temp [31:0] $end
$var reg 1 %" zero $end
$upscope $end
$scope module control_unit_i8 $end
$var wire 6 &" instr_op [5:0] $end
$var reg 2 '" alu_op [1:0] $end
$var reg 1 < alu_src $end
$var reg 1 E branch $end
$var reg 1 @ mem_read $end
$var reg 1 ? mem_to_reg $end
$var reg 1 = mem_write $end
$var reg 1 O reg_dst $end
$var reg 1 ; reg_write $end
$upscope $end
$scope module cpu_registers_i1 $end
$var wire 1 ) clk $end
$var wire 32 (" data_in [31:0] $end
$var wire 5 )" dst_addr [4:0] $end
$var wire 1 * rst $end
$var wire 5 *" src1_addr [4:0] $end
$var wire 32 +" src1_out [31:0] $end
$var wire 5 ," src2_addr [4:0] $end
$var wire 32 -" src2_out [31:0] $end
$var wire 1 ; write_en $end
$var integer 32 ." i [31:0] $end
$upscope $end
$scope module gen_register_i0 $end
$var wire 1 ) clk $end
$var wire 32 /" data_in [31:0] $end
$var wire 1 * rst $end
$var wire 1 0" write_en $end
$var parameter 32 1" WORD_SIZE $end
$var reg 32 2" data_out [31:0] $end
$upscope $end
$upscope $end
$scope task test_case $end
$var reg 6 3" instr_opcode_exp [5:0] $end
$var reg 32 4" prog_count_exp [31:0] $end
$var reg 5 5" reg1_addr_exp [4:0] $end
$var reg 32 6" reg1_data_exp [31:0] $end
$var reg 5 7" reg2_addr_exp [4:0] $end
$var reg 32 8" reg2_data_exp [31:0] $end
$var reg 5 9" write_reg_addr_exp [4:0] $end
$var reg 32 :" write_reg_data_exp [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100000 1"
b100000 n
b100000 j
b100000 f
b101 b
b100000 _
b1000 ^
b100000 X
b10000 W
$end
#0
$dumpvars
bx :"
bx 9"
bx 8"
bx 7"
bx 6"
bx 5"
bx 4"
bx 3"
b0 2"
10"
b100 /"
bx ."
bx -"
b10 ,"
bx +"
b0 *"
b10 )"
bx ("
b0 '"
b100011 &"
0%"
bx $"
b100011 #"
b10 ""
b11111 !"
b100 ~
bx }
bx |
bx {
b10 z
b11111 y
0x
bx w
b100 v
b0 u
b10 t
b100 s
b10 r
b0 q
b11111 p
b100 o
b100 m
b100011 l
b11111 k
bx i
b11111 h
bx g
bx e
bx d
b10 c
b0 a
b10 `
bx ]
bx \
b10001100000000100000000000011111 [
b0 Z
bx Y
b11111 V
b11111 U
b0 T
b10 S
bx R
b100011 Q
b100 P
0O
b11111 N
b0 M
b11111 L
b10 K
b11111 J
xI
bx H
bx G
b100 F
0E
b100011 D
bx C
b0 B
b10001100000000100000000000011111 A
1@
1?
b0 >
0=
1<
1;
b11111 :
b0 9
bx 8
b10 7
bx 6
bx 5
b10 4
bx 3
b0 2
01
b100011 0
bx /
b10 .
b0 -
b0 ,
b0 +
1*
0)
b100011 (
b0 '
b0 &
bx %
b10 $
bx #
b10 "
bx !
$end
#50000
b1010110 !
b1010110 /
b1010110 R
b1010110 g
b1010110 ("
b1010110 G
b1010110 ]
b1010110 d
b11111 C
b11111 Y
0I
b11111 H
b11111 e
b11111 |
b0 #
b0 5
b0 6
b0 \
b0 i
b0 -"
b0 %
b0 3
b0 8
b0 {
b0 +"
b100000 ."
1)
#95000
0*
#100000
b1010110 :"
b10 9"
b0 8"
b10 7"
b0 6"
b0 5"
b100011 3"
b0 4"
0)
#150000
b11 "
b11 .
b11 S
b11 c
b11 )"
bz G
bz ]
bz d
b10101100 C
b10101100 Y
b10101100 !
b10101100 /
b10101100 R
b10101100 g
b10101100 ("
b10 >
b10 q
b10 '"
1O
1;
0<
0?
0@
b10101100 H
b10101100 e
b10101100 |
b1010110 J
b1010110 k
b1010110 y
b0 (
b0 0
b0 Q
b0 &"
b1010110 %
b1010110 3
b1010110 8
b1010110 {
b1010110 +"
b10 &
b10 2
b10 9
b10 *"
b11 M
b11 a
b100000 L
b100000 p
b1100000100000 N
b1100000100000 V
b1100000100000 h
b1100000100000 !"
b1100000100000 :
b1100000100000 U
b1000 P
b1000 o
b1000 /"
b1100000101000 D
b1100000101000 l
b1100000101000 #"
b10000100001100000100000 A
b10000100001100000100000 [
b1 B
b1 Z
b1000 F
b1000 m
b1000 v
b1000 ~
b100 '
b100 -
b100 T
b100 u
b100 2"
b1010110 #
b1010110 5
b1010110 6
b1010110 \
b1010110 i
b1010110 -"
b1 +
b1 ,
1)
#200000
0)
#250000
b10000100 C
b10000100 Y
b10000100 !
b10000100 /
b10000100 R
b10000100 g
b10000100 ("
b10000100 H
b10000100 e
b10000100 |
1=
1<
0;
b0 >
b0 q
b0 '"
0O
b11 "
b11 .
b11 S
b11 c
b11 )"
b10000100 J
b10000100 k
b10000100 y
b101011 (
b101011 0
b101011 Q
b101011 &"
b0 %
b0 3
b0 8
b0 {
b0 +"
b0 &
b0 2
b0 9
b0 *"
b10101100 #
b10101100 5
b10101100 6
b10101100 \
b10101100 i
b10101100 -"
b11 $
b11 4
b11 7
b11 `
b11 ,"
b0 M
b0 a
b100 L
b100 p
b10000100 N
b10000100 V
b10000100 h
b10000100 !"
b10000100 :
b10000100 U
b1100 P
b1100 o
b1100 /"
b10010000 D
b10010000 l
b10010000 #"
b10101100000000110000000010000100 A
b10101100000000110000000010000100 [
b10 B
b10 Z
b1100 F
b1100 m
b1100 v
b1100 ~
b1000 '
b1000 -
b1000 T
b1000 u
b1000 2"
b10 +
b10 ,
1)
b10101100 :"
b11 9"
b1010110 8"
b1010110 6"
b10 5"
b0 3"
b100 4"
#300000
0)
#350000
b110 K
b110 r
b110 z
b1010110 C
b1010110 Y
b1010110 !
b1010110 /
b1010110 R
b1010110 g
b1010110 ("
b10 >
b10 q
b10 '"
1;
1O
0<
0=
b1010110 H
b1010110 e
b1010110 |
b100 "
b100 .
b100 S
b100 c
b100 )"
b1010110 J
b1010110 k
b1010110 y
b0 (
b0 0
b0 Q
b0 &"
b10101100 %
b10101100 3
b10101100 8
b10101100 {
b10101100 +"
b11 &
b11 2
b11 9
b11 *"
b1010110 #
b1010110 5
b1010110 6
b1010110 \
b1010110 i
b1010110 -"
b10 $
b10 4
b10 7
b10 `
b10 ,"
b100 M
b100 a
b100010 L
b100010 p
b10000000100010 N
b10000000100010 V
b10000000100010 h
b10000000100010 !"
b10000000100010 :
b10000000100010 U
b10000 P
b10000 o
b10000 /"
b10000000110010 D
b10000000110010 l
b10000000110010 #"
b11000100010000000100010 A
b11000100010000000100010 [
b11 B
b11 Z
b10000 F
b10000 m
b10000 v
b10000 ~
b1100 '
b1100 -
b1100 T
b1100 u
b1100 2"
b11 +
b11 ,
1)
b10000100 :"
b10101100 8"
b11 7"
b0 6"
b0 5"
b101011 3"
b1000 4"
#400000
0)
#450000
b10111000 C
b10111000 Y
b10111000 !
b10111000 /
b10111000 R
b10111000 g
b10111000 ("
b10111000 H
b10111000 e
b10111000 |
1<
1;
b0 >
b0 q
b0 '"
0O
b101 "
b101 .
b101 S
b101 c
b101 )"
b10 K
b10 r
b10 z
b1100 J
b1100 k
b1100 y
b1000 (
b1000 0
b1000 Q
b1000 &"
b0 #
b0 5
b0 6
b0 \
b0 i
b0 -"
b101 $
b101 4
b101 7
b101 `
b101 ,"
b0 M
b0 a
b1100 L
b1100 p
b1100 N
b1100 V
b1100 h
b1100 !"
b1100 :
b1100 U
b10100 P
b10100 o
b10100 /"
b100000 D
b100000 l
b100000 #"
b100000011001010000000000001100 A
b100000011001010000000000001100 [
b100 B
b100 Z
b10100 F
b10100 m
b10100 v
b10100 ~
b10000 '
b10000 -
b10000 T
b10000 u
b10000 2"
b100 +
b100 ,
1)
b1010110 :"
b100 9"
b1010110 8"
b10 7"
b10101100 6"
b11 5"
b0 3"
b1100 4"
#500000
0)
#550000
b0 K
b0 r
b0 z
b10101000 C
b10101000 Y
b10101000 !
b10101000 /
b10101000 R
b10101000 g
b10101000 ("
b10 >
b10 q
b10 '"
1O
1;
0<
b10101000 H
b10101000 e
b10101000 |
b110 "
b110 .
b110 S
b110 c
b110 )"
b10101100 J
b10101100 k
b10101100 y
b0 (
b0 0
b0 Q
b0 &"
b10111000 %
b10111000 3
b10111000 8
b10111000 {
b10111000 +"
b101 &
b101 2
b101 9
b101 *"
b11 $
b11 4
b11 7
b11 `
b11 ,"
b110 M
b110 a
b100100 L
b100100 p
b11000000100100 N
b11000000100100 V
b11000000100100 h
b11000000100100 !"
b11000000100100 :
b11000000100100 U
b11000 P
b11000 o
b11000 /"
b11000000111100 D
b11000000111100 l
b11000000111100 #"
b101000110011000000100100 A
b101000110011000000100100 [
b101 B
b101 Z
b11000 F
b11000 m
b11000 v
b11000 ~
b10100 '
b10100 -
b10100 T
b10100 u
b10100 2"
b10101100 #
b10101100 5
b10101100 6
b10101100 \
b10101100 i
b10101100 -"
b101 +
b101 ,
1)
b10111000 :"
b101 9"
b0 8"
b101 7"
b1000 3"
b10000 4"
#600000
0)
#650000
b11111110 C
b11111110 Y
b11111110 !
b11111110 /
b11111110 R
b11111110 g
b11111110 ("
b11111110 H
b11111110 e
b11111110 |
b111 "
b111 .
b111 S
b111 c
b111 )"
b1 K
b1 r
b1 z
b1010110 J
b1010110 k
b1010110 y
b10101000 %
b10101000 3
b10101000 8
b10101000 {
b10101000 +"
b110 &
b110 2
b110 9
b110 *"
b1010110 #
b1010110 5
b1010110 6
b1010110 \
b1010110 i
b1010110 -"
b10 $
b10 4
b10 7
b10 `
b10 ,"
b111 M
b111 a
b100101 L
b100101 p
b11100000100101 N
b11100000100101 V
b11100000100101 h
b11100000100101 !"
b11100000100101 :
b11100000100101 U
b11100 P
b11100 o
b11100 /"
b11100001000001 D
b11100001000001 l
b11100001000001 #"
b110000100011100000100101 A
b110000100011100000100101 [
b110 B
b110 Z
b11100 F
b11100 m
b11100 v
b11100 ~
b11000 '
b11000 -
b11000 T
b11000 u
b11000 2"
b110 +
b110 ,
1)
b10101000 :"
b110 9"
b10101100 8"
b11 7"
b10111000 6"
b101 5"
b0 3"
b10100 4"
#700000
0)
#750000
b1 C
b1 Y
b11111111111111111111111100000001 !
b11111111111111111111111100000001 /
b11111111111111111111111100000001 R
b11111111111111111111111100000001 g
b11111111111111111111111100000001 ("
b11111111111111111111111100000001 H
b11111111111111111111111100000001 e
b11111111111111111111111100000001 |
b1000 "
b1000 .
b1000 S
b1000 c
b1000 )"
b1100 K
b1100 r
b1100 z
b1000 M
b1000 a
b100111 L
b100111 p
b100000000100111 N
b100000000100111 V
b100000000100111 h
b100000000100111 !"
b100000000100111 :
b100000000100111 U
b100000 P
b100000 o
b100000 /"
b100000001000111 D
b100000001000111 l
b100000001000111 #"
b110000100100000000100111 A
b110000100100000000100111 [
b111 B
b111 Z
b100000 F
b100000 m
b100000 v
b100000 ~
b11100 '
b11100 -
b11100 T
b11100 u
b11100 2"
b111 +
b111 ,
1)
b11111110 :"
b111 9"
b1010110 8"
b10 7"
b10101000 6"
b110 5"
b11000 4"
#800000
0)
#850000
b0 C
b0 Y
b0 !
b0 /
b0 R
b0 g
b0 ("
1I
b0 H
b0 e
b0 |
b110 "
b110 .
b110 S
b110 c
b110 )"
b111 K
b111 r
b111 z
b10111000 %
b10111000 3
b10111000 8
b10111000 {
b10111000 +"
b101 &
b101 2
b101 9
b101 *"
b100 $
b100 4
b100 7
b100 `
b100 ,"
b110 M
b110 a
b101010 L
b101010 p
b11000000101010 N
b11000000101010 V
b11000000101010 h
b11000000101010 !"
b11000000101010 :
b11000000101010 U
b100100 P
b100100 o
b100100 /"
b11000001001110 D
b11000001001110 l
b11000001001110 #"
b101001000011000000101010 A
b101001000011000000101010 [
b1000 B
b1000 Z
b100100 F
b100100 m
b100100 v
b100100 ~
b100000 '
b100000 -
b100000 T
b100000 u
b100000 2"
b1000 +
b1000 ,
1)
b11111111111111111111111100000001 :"
b1000 9"
b11100 4"
#900000
0)
#950000
b10111000 C
b10111000 Y
b10111000 !
b10111000 /
b10111000 R
b10111000 g
b10111000 ("
0I
b10111000 H
b10111000 e
b10111000 |
1E
0;
b1 >
b1 q
b1 '"
1O
b11111 "
b11111 .
b11111 S
b11111 c
b11111 )"
b110 K
b110 r
b110 z
b0 J
b0 k
b0 y
b100 (
b100 0
b100 Q
b100 &"
b0 #
b0 5
b0 6
b0 \
b0 i
b0 -"
b0 $
b0 4
b0 7
b0 `
b0 ,"
b11111 M
b11111 a
b111000 L
b111000 p
b11111111111111111111111111111000 N
b11111111111111111111111111111000 V
b11111111111111111111111111111000 h
b11111111111111111111111111111000 !"
b1111111111111000 :
b1111111111111000 U
b101000 P
b101000 o
b101000 /"
b100000 D
b100000 l
b100000 #"
b10000101000001111111111111000 A
b10000101000001111111111111000 [
b1001 B
b1001 Z
b101000 F
b101000 m
b101000 v
b101000 ~
b100100 '
b100100 -
b100100 T
b100100 u
b100100 2"
b1001 +
b1001 ,
1)
b0 :"
b110 9"
b100 7"
b10111000 6"
b101 5"
b100000 4"
#1000000
0)
#1050000
b10101100 G
b10101100 ]
b10101100 d
b10 K
b10 r
b10 z
b10000100 C
b10000100 Y
b10101100 !
b10101100 /
b10101100 R
b10101100 g
b10101100 ("
1@
1;
1?
1<
b0 >
b0 q
b0 '"
0E
0O
b10000100 H
b10000100 e
b10000100 |
b1000 "
b1000 .
b1000 S
b1000 c
b1000 )"
b10000100 J
b10000100 k
b10000100 y
b100011 (
b100011 0
b100011 Q
b100011 &"
b0 %
b0 3
b0 8
b0 {
b0 +"
b0 &
b0 2
b0 9
b0 *"
b11111111111111111111111100000001 #
b11111111111111111111111100000001 5
b11111111111111111111111100000001 6
b11111111111111111111111100000001 \
b11111111111111111111111100000001 i
b11111111111111111111111100000001 -"
b1000 $
b1000 4
b1000 7
b1000 `
b1000 ,"
b0 M
b0 a
b100 L
b100 p
b10000100 N
b10000100 V
b10000100 h
b10000100 !"
b10000100 :
b10000100 U
b101100 P
b101100 o
b101100 /"
b10110000 D
b10110000 l
b10110000 #"
b10001100000010000000000010000100 A
b10001100000010000000000010000100 [
b1010 B
b1010 Z
b101100 F
b101100 m
b101100 v
b101100 ~
b101000 '
b101000 -
b101000 T
b101000 u
b101000 2"
b1010 +
b1010 ,
1)
b10111000 :"
b11111 9"
b0 8"
b0 7"
b100 3"
b100100 4"
#1100000
0)
#1150000
b0 C
b0 Y
b0 !
b0 /
b0 R
b0 g
b0 ("
bz G
bz ]
bz d
1I
b0 H
b0 e
b0 |
b10 >
b10 q
b10 '"
1O
1;
0<
0?
0@
b0 "
b0 .
b0 S
b0 c
b0 )"
b0 J
b0 k
b0 y
b0 (
b0 0
b0 Q
b0 &"
b0 $
b0 4
b0 7
b0 `
b0 ,"
b0 L
b0 p
b0 N
b0 V
b0 h
b0 !"
b0 :
b0 U
b110000 P
b110000 o
b110000 /"
b110000 D
b110000 l
b110000 #"
b0 A
b0 [
b1011 B
b1011 Z
b110000 F
b110000 m
b110000 v
b110000 ~
b101100 '
b101100 -
b101100 T
b101100 u
b101100 2"
b0 #
b0 5
b0 6
b0 \
b0 i
b0 -"
b1011 +
b1011 ,
1)
b10101100 :"
b1000 9"
b11111111111111111111111100000001 8"
b1000 7"
b0 6"
b0 5"
b100011 3"
b101000 4"
